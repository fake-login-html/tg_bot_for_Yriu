import time

from pyrogram import Client, filters
from database import Db
import asyncio
import datetime
from  config import *
# import send_sms_everyday # –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

############################3

# async def run():

        #–ø–∞—Ä—Å–∏–Ω–≥ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞
        # async for m in client.get_chat_members(-1002023924728):
        #     print(m.joined_date, m.user.first_name)

        # # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞
        # async for message in client.get_chat_history(chat_id):
        #     print(message)

# ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ‚Ññ3

client = Client(name="my_session", api_id=api_id, api_hash=api_hash)
id_users = {} # –≤—Å—è –∏–Ω—Ñ–∞ –æ —é–∑–µ—Ä–µ, –æ—Å—Ç–∞–≤–∏–≤—à–∏–º –∫–æ–º–º–µ–Ω—Ç
send_sms_user = 6858535610

# –æ—Ç–º–µ—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã –≤ –±–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º–∏
@client.on_message(filters.command("stop"))
def update_posts(client, message):

   try:
        users_id = message.from_user.id
        date_now = datetime.datetime.now()
        if users_id in main_users:
            print(f'–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–µ–Ω {date_now}')
            client.send_message(chat_id=send_sms_user, text='–≤—Å–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
            Db().up_posts()
   except:
       pass

@client.on_message(filters.chat(send_sms_user))
def handle_message(client, message):
    client.send_message(chat_id=send_sms_user, text='—Å–∫—Ä–∏–ø—Ç —Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏ –µ—â–µ –Ω–µ —Å–ª–æ–º–∞–ª—Å—è :—Å')

message_id = []
# MAIN
@client.on_message(filters.chat(chat_id))
def handle_message(client, message):

    async def check_user_in_channel(app, channel, user_id):
        try:
            member = await app.get_chat_member(channel, user_id)
            member = str(member.status).split('.')[1]
            return member in ["MEMBER", "ADMINISTRATOR", "CREATOR"]
        except Exception as e:
            # print(f"–û—à–∏–±–∫–∞: {e}")
            return False

    def ckeck_in_group(client, channel, user_id):

        ckeck = asyncio.run(check_user_in_channel(client, channel, user_id))

        return ckeck


 ############################################

    # –ø–æ–ª—É—á–∞–µ–º –∏–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
    # message_id = []
    message_id.append(message.id)


    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = ''
    try:
        message_text = message.text
        if message_text == None:
            message_text = message.caption
    except:
        pass

    # –ø–æ–ª—É—á–∞–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞, –ø–æ –Ω–µ–º—É
    id_sms = message.id
    reply_to_message_id = message.reply_to_message_id
    date_now = datetime.datetime.now()

    # –∏—â–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã—Ä—ã—à–∏ –∏ —Å–º–æ—Ä–∏–º —É –Ω–∏—Ö –∫–æ–º–º–µ–Ω–∞—Ç—Ä–∏–∏
    try:
        posts = Db().post_use()
        for post in posts:

            id_post = post[0]
            if id_post == reply_to_message_id:

                # –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                if message.from_user != None:
                # –ø–æ–ª—É—á–∞–µ–º id
                    try:
                        id_users['id_users'] = message.from_user.id
                    except:
                        id_users['id_users'] = ''
                # –ø–æ–ª—É—á–∞–µ–º L_name
                    try:
                        id_users['last_name'] = message.from_user.last_name
                    except:
                        id_users['last_name'] = ''
                # –ø–æ–ª—É—á–∞–µ–º F_name
                    try:
                        id_users['first_name'] = message.from_user.first_name
                    except:
                        id_users['first_name'] = ''
                # –ø–æ–ª—É—á–∞–µ–º username
                    try:
                        id_users['username'] = f'@{message.from_user.username}'
                    except:
                        id_users['username'] = ''
                # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                    try:
                        id_users['message_text'] = message.text
                    except:
                        id_users['message_text'] = ''

                    id_users['id_post'] = id_post
                    id_users['data_coments'] = date_now
                    users_in_post = Db().check_user_for_post(id_users)[0][0]
                    user_in_group = ckeck_in_group(client, channel, id_users['id_users'])

                    # –µ—Å–ª–∏ —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è –∏ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≥—Ä—É–ø–ø–µ
                    if users_in_post == 0 \
                    and user_in_group == True\
                    and len(message_id) > 0:
                    # –µ—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–∫, –±–µ—Ä–µ–º –∏–¥ –ø–µ—Ä–≤–æ–π –∏ —á–∏—Å—Ç–∏–º –º–∞—Å—Å–∏–≤
                        test = message_id[len(message_id)-1]
                        message_id.clear()

                    # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        seral_num_user = Db().add_user(id_users)
                        print(f'–î–æ–±–∞–≤–∏–ª–∏ –≤ –±–¥ {id_users}')

                        # message.reply(text=f'–°–ø–∞—Å–∏–±–æ ü§ù –í–∞—à –Ω–æ–º–µ—Ä: {seral_num_user} ‚úåÔ∏è')
                        client.send_message(chat_id=chat_id, text=f'–°–ø–∞—Å–∏–±–æ ü§ù –í–∞—à –Ω–æ–º–µ—Ä: {seral_num_user} ‚úåÔ∏è', reply_to_message_id=test)#message_id[len(message_id)-1])
                        client.send_reaction(chat_id=chat_id, message_id=test, emoji="üëç")

                   #–µ—Å–ª–∏ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≥—Ä—É–ø–ø–µ
                    if user_in_group == False:
                        message.reply(text=f'üí• –ß—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª üì∫')

    except:
        pass

    # –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–¥, –æ —Ç–æ–º, —á—Ç–æ –Ω–∞—á–∞–ª—Å—è —Ä–æ–∑—ã–≥—Ä—ã—à
    # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –≥—Ä—É–ø–ø—ã –≤ —á–∞—Ç
    try:
        if message.sender_chat.id != chat_id:
            # –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–µ, –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ–≥–æ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä
            if '—Ä–∞–∑—ã–≥—Ä–∞–µ–º' in message_text:

                Db().add_post(id_sms, date_now)
                print(f'–†–û–ó–´–ì–†–´–® –ù–ê–ß–ê–õ–°–Ø!!! {date_now}')
                client.send_message(chat_id=send_sms_user, text=f'–†–û–ó–´–ì–†–´–® –ù–ê–ß–ê–õ–°–Ø!!! {date_now}')
    except:
        pass

        # print(message.reply_to_message.sender_chat.id)
    # except:
    #     pass
    ###################3
    # print(message.from_user)

    # # –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    # if message.from_user != None:
    # # –ø–æ–ª—É—á–∞–µ–º id
    #     try:
    #         id_users['id_users'] = message.from_user.id
    #     except:
    #         id_users['id_users'] = ''
    # # –ø–æ–ª—É—á–∞–µ–º L_name
    #     try:
    #         id_users['last_name'] = message.from_user.last_name
    #     except:
    #         id_users['last_name'] = ''
    # # –ø–æ–ª—É—á–∞–µ–º F_name
    #     try:
    #         id_users['first_name'] = message.from_user.first_name
    #     except:
    #         id_users['first_name'] = ''
    # # –ø–æ–ª—É—á–∞–µ–º username
    #     try:
    #         id_users['username'] = f'@{message.from_user.username}'
    #     except:
    #         id_users['username'] = ''





        # print(id_users)

        # try:

        # print(message.from_user)
    # print(message.from_user)


    # if message.reply_to_message:
    #     user_id = message.reply_to_message.from_user.id
    #
    #     # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    #     try:
    #         user = client.get_users(user_id)
    #         user_info = f"""
    #             ID: {user.id}
    #             Username: @{user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}
    #             First Name: {user.first_name}
    #             Last Name: {user.last_name if user.last_name else '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
    #             Language Code: {user.language_code if user.language_code else '–Ω–µ —É–∫–∞–∑–∞–Ω'}
    #             Is Bot: {user.is_bot}
    #             """
    #         print(user_info)
    #     except Exception as e:
    #         message.reply_text(f"–û—à–∏–±–∫–∞: {e}")

    ####################

if __name__ == "__main__":
    client.run()


